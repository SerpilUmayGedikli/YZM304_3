# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FWdjnJVjCc2CGQiR88eH2vKx-T7Umwq_
"""

import torch
from torch.utils.data import Dataset
from scratch_rnn.utils import tokenize, build_vocab, encode_sentence
from scratch_rnn.data import load_data

class SentimentDataset(Dataset):
    def __init__(self, split="train"):
        raw_data = load_data()
        sentences = [s for _, s in raw_data]
        labels = [l for l, _ in raw_data]

        tokenized = [tokenize(s) for s in sentences]
        self.vocab = build_vocab(tokenized)
        encoded = [encode_sentence(s, self.vocab) for s in tokenized]

        X = [torch.tensor(seq, dtype=torch.long) for seq in encoded]
        y = [torch.tensor(label, dtype=torch.long) for label in labels]

        split_idx = int(0.8 * len(X))
        if split == "train":
            self.X = X[:split_idx]
            self.y = y[:split_idx]
        else:
            self.X = X[split_idx:]
            self.y = y[split_idx:]

    def __len__(self):
        return len(self.X)

    def __getitem__(self, idx):
        return self.X[idx], self.y[idx]

